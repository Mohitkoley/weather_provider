name: Flutter CI

on:
  push:
    tags:
      - 'weather_app'
    branches:
      - main

jobs:
  build:
    name: Build and Upload to release
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Create .env File
      run: echo "APP_ID=${{ secrets.APP_ID }}" > .env

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.6'
        channel: 'stable'

    - name: verify flutter version
      run: flutter --version

    - name: Install dependencies
      run: flutter pub get

    # - name: Load Environment Variables
    #   run: flutter pub run dotenv:generate

    - name: Build APK
      run: 
        # Access the API key from the secret
        flutter build apk

      #upload apk to artifacts with the name weather_app.apk with each iteration inceament the version code
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: weather_app.apk
        path: build/app/outputs/flutter-apk/app-release.apk

      #upload apk to github release and add paramenter token
    # - name: Create Release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: weather_app.apk
    #     token: ${{ secrets.GIT_TOKEN }}
    #     tag: ${{ github.ref }}
    #     body: |
    #       Release ${{ github.ref }}
    #       - Build ${{ github.run_number }}
    #       - Commit ${{ github.sha }}
    #       - Branch ${{ github.ref }}
    #       - Author ${{ github.actor }}```
    #     name: ${{ github.ref }}
    #     prerelease: false
    #     draft: false

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/apk/release/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

        

